{"version":3,"sources":["components/searchbar/Searchbar.js","components/imageGallery/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/api/api.js","components/button/Button.js","components/loader/Loader.js","components/modal/Modal.js","components/App.js","index.js"],"names":["Searchbar","state","query","onHandleChange","e","value","target","setState","onFormSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","onClick","largeImageURL","tags","src","webformatURL","alt","ImageGallery","images","map","index","id","fetchImg","page","baseURL","fetch","then","response","status","json","data","hits","Button","LoaderSpinner","color","height","width","Modal","escFunction","keyCode","onClose","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","imageURL","imageTags","App","loading","getPhoto","search","a","result","prev","isOpenModal","loadMore","prevState","window","scrollTo","top","documentElement","scrollHeight","behavior","openModal","closeModal","Loader","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b1b9216d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n\r\n  onHandleChange = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    const { query } = this.state;\r\n    e.preventDefault();\r\n    this.props.onSubmit(query);\r\n    //console.log(\"onFormSubmit this.state.query ==>>\", query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.onFormSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.onHandleChange}\r\n            value={this.query}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({ image, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={() => onClick(image.largeImageURL, image.tags)}\r\n        src={image.webformatURL}\r\n        alt={image.tags}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image, index) => (\r\n        <ImageGalleryItem\r\n          onClick={onClick}\r\n          image={image}\r\n          key={`${image.id}${index}`}\r\n          // key={index}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","const fetchImg = (query, page) => {\r\n  const apiKey = \"19534909-4566fefb162e8faacd9cf503d\";\r\n  const baseURL = `https://pixabay.com/api/?key=${apiKey}&q=${query}&image_type=photo&page=${page}&per_page=12`;\r\n  //https://pixabay.com/api/?key=19534909-4566fefb162e8faacd9cf503d&q=car&image_type=photo&page=1&per_page=12\r\n\r\n  return fetch(baseURL)\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        return response.json();\r\n      }\r\n    })\r\n    .then((data) => {\r\n      //console.log(data.hits);\r\n      return data.hits;\r\n    });\r\n};\r\n\r\nexport default fetchImg;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <button onClick={onClick} className=\"btnLoad\">\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  state = {};\r\n\r\n  escFunction = (e) => {\r\n    if (e.keyCode === 27) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"keydown\", this.escFunction, false);\r\n  };\r\n  componentWillUnmount = () => {\r\n    document.removeEventListener(\"keydown\", this.escFunction, false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.props.onClose}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.imageURL} alt={this.props.imageTags} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\n\n//import axios from \"axios\";\nimport Searchbar from \"./searchbar/Searchbar\";\nimport ImageGallery from \"./imageGallery/ImageGallery\";\nimport fetchImg from \"./api/api\";\nimport Button from \"./button/Button\";\nimport LoaderSpinner from \"./loader/Loader\";\nimport Modal from \"./modal/Modal\";\n\nclass App extends Component {\n  state = {\n    loading: false,\n    images: [],\n    page: 1,\n    query: \"\",\n    largeImageURL: \"\",\n    tags: \"\",\n  };\n\n  getPhoto = async (search, page = 1) => {\n    // console.log(\"getPhoto page=>>\", page);\n    // console.log(\"getPhoto search=>>\", search);\n    this.setState({\n      loading: true,\n    });\n    //console.log(\"state loading \", this.state.loading);\n    const result = await fetchImg(search, page);\n    this.setState((prev) => ({\n      ...prev,\n      images: [...result],\n      page: 2,\n      query: search,\n      loading: false,\n      isOpenModal: false,\n    }));\n  };\n\n  loadMore = async (e) => {\n    const { query, page } = this.state;\n    this.setState({\n      loading: true,\n    });\n    const result = await fetchImg(query, page);\n    this.setState((prevState) => ({\n      ...prevState,\n      images: [...prevState.images, ...result],\n      page: prevState.page + 1,\n      loading: false,\n    }));\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  openModal = (largeImageURL, tags) => {\n    //console.log(largeImageURL. tags);\n    this.setState({\n      isOpenModal: true,\n      largeImageURL: largeImageURL,\n      tags: tags,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({ isOpenModal: false });\n  };\n\n  render() {\n    const { images, loading, isOpenModal, largeImageURL, tags } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.getPhoto} />\n        {loading && <LoaderSpinner />}\n        <ImageGallery images={images} onClick={this.openModal} />\n        {images.length > 0 && <Button onClick={this.loadMore} />}\n        {isOpenModal && (\n          <Modal\n            onClose={this.closeModal}\n            imageURL={largeImageURL}\n            imageTags={tags}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}